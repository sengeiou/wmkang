<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>wmkang</groupId>
    <artifactId>a-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>${project.artifactId}</name>
    <description>Project parent and dependency management moudle</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.7.RELEASE</version>
    </parent>

    <modules>
        <module>base-common</module>
        <module>base-domain</module>
        <module>cloud-config</module>
        <module>cloud-eureka</module>
        <module>cloud-gateway</module>
        <module>svc-task</module>
        <module>front-task</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <docker.build.skip>true</docker.build.skip>
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>
        <lombok.version>1.18.4</lombok.version>
        <commons-lang.version>2.6</commons-lang.version>
        <redisson-hibernate-53-version>3.14.0</redisson-hibernate-53-version>
        <log4jdbc-version>1.16</log4jdbc-version>
        <joda-time.version>2.10.8</joda-time.version>
        <springdoc-openapi-ui.version>1.2.32</springdoc-openapi-ui.version>
        <junit.jupiter.version>5.5.2</junit.jupiter.version>
        <jsonassert.version>1.5.0</jsonassert.version>
    </properties>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profile>local</profile>
                <label>develop</label>
                <spring.cloud.config.server.git.uri>classpath:/cfg-repo/</spring.cloud.config.server.git.uri>
                <spring.cloud.config.uri>http://localhost:9001</spring.cloud.config.uri>
                <docker.registry>wmkang</docker.registry>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profile>test</profile>
                <label>develop</label>
                <spring.cloud.config.server.git.uri>classpath:/cfg-repo/</spring.cloud.config.server.git.uri>
                <spring.cloud.config.uri>http://localhost:9001</spring.cloud.config.uri>
                <docker.registry>wmkang</docker.registry>
            </properties>
        </profile>
        <profile>
            <id>develop</id>
            <properties>
                <profile>develop</profile>
                <label>develop</label>
                <spring.cloud.config.server.git.uri>classpath:/cfg-repo/</spring.cloud.config.server.git.uri>
                <spring.cloud.config.uri>http://cloud-config:9001</spring.cloud.config.uri>
                <docker.registry>wmkang</docker.registry>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <profile>release</profile>
                <label>master</label>
                <spring.cloud.config.server.git.uri>classpath:/cfg-repo/</spring.cloud.config.server.git.uri>
                <spring.cloud.config.uri>http://cloud-config:9001</spring.cloud.config.uri>
                <docker.registry>asia.gcr.io/magnetic-tenure-269711</docker.registry>
            </properties>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>wmkang</groupId>
                <artifactId>base-common</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>wmkang</groupId>
                <artifactId>base-domain</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-hibernate-53</artifactId>
                <version>${redisson-hibernate-53-version}</version>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-sql</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-sql-spring</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webflux-core</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webflux-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <defaultGoal>clean package</defaultGoal>
        <finalName>${project.artifactId}-${profile}</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*/**</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>docker-build</id>    <!-- mvn exec:exec@docker-build -->
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <skip>${docker.build.skip}</skip>
                            <arguments>
                                <argument>build</argument>
                                <argument>.</argument>
                                <argument>-t</argument>
                                <argument>${docker.registry}/${project.artifactId}</argument>
                                <argument>--build-arg</argument>
                                <argument>JAR_FILE=${project.build.finalName}.jar</argument>
                                <argument>--build-arg</argument>
                                <argument>CFG_URL=${spring.cloud.config.uri}/${project.artifactId}/${profile}/master</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-push</id>    <!-- mvn exec:exec@docker-push -->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>push</argument>
                                <argument>${docker.registry}/${project.artifactId}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
